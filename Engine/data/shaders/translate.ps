Texture2D shaderTexture;
SamplerState SampleType;

cbuffer TranslationBuffer
{
    float textureTranslationX;
    float textureTranslationY;
    float textureFrameX;
    float textureFrameY;
};

struct PixelInputType
{
    float4 position : SV_POSITION;
    float2 tex : TEXCOORD0;
};

float4 TranslatePixelShader(PixelInputType input) : SV_TARGET
{
    // Translate the position where we sample the pixel from.
   // input.tex.x += textureTranslationX;
   // input.tex.y += textureTranslationY;

    int tileFrame = textureFrameX + textureFrameY * 8;

    float2 tileSize = float2(1.0 / 8, 1.0 / 6);
    float2 tileXY = float2(tileFrame % 8, tileFrame / 6);
    float2 tex = input.tex * tileSize + tileXY * tileSize;

    return shaderTexture.Sample(SampleType, tex);
}