Texture2D shaderTexture;
SamplerState SampleType;

cbuffer TranslationBuffer
{
    float textureTranslationX;
    float textureTranslationY;
    float texturePositionX;
    float texturePositionY;
};

struct PixelInputType
{
    float4 position : SV_POSITION;
    float2 tex : TEXCOORD0;
};

float4 TranslatePixelShader(PixelInputType input) : SV_TARGET
{
    // Translate the position where we sample the pixel from.
    input.tex.x += textureTranslationX;
    input.tex.y += textureTranslationY;

    float2 tileSize = float2(1.0f / 8.0f, 1.0f / 6.0f);
    float2 tileXY = float2(texturePositionX, texturePositionY);
    float2 tex = input.tex * tileSize + tileXY * tileSize;

    return shaderTexture.Sample(SampleType, tex);
}