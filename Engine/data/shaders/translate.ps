Texture2D shaderTexture;
SamplerState SampleType;

cbuffer TranslationBuffer
{
    float textureXTranslation;
    float textureYTranslation;
    int textureXFrame;
    int textureYFrame;
    int maxXFrame;
    int maxYFrame;
};

struct PixelInputType
{
    float4 position : SV_POSITION;
    float2 tex : TEXCOORD0;
};

float4 TranslatePixelShader(PixelInputType input) : SV_TARGET
{
    int tileFrame = textureXFrame + textureYFrame * maxXFrame;

    float2 tileSize = float2(1.0 / maxXFrame, 1.0 / maxYFrame);
    float2 tileXY = float2(textureXFrame, textureYFrame);
    float2 tex = input.tex * tileSize + tileXY * tileSize;

    return shaderTexture.Sample(SampleType, tex);
}